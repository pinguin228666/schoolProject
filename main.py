import telebot
from telebot import types
from itertools import *
import databaseConnect
import random


class collage(object):
    def __init__(self, name='0', balls=0, subjects='0', description='0',
                 link='0', besplatno=0, platno=0, cost=0, otsrochka=0):
        self.name = name
        self.balls = balls
        self.subjects = subjects
        self.description = description
        self.link = link
        self.besplatno = besplatno
        self.platno = platno
        self.cost = cost
        self.otsrochka = otsrochka

    def can_be(self, our_subjects, our_balls):
        for i in permutations(our_subjects, r=2):
            if sorted(self.subjects) == sorted(i) and our_balls >= self.balls:
                return True
        return False


collages = [collage('–ú–ò–°–ò–°', 250, ('math_p', 'inf'), 'norm VUZ1'),
                collage('–†–¢–£ –ú–ò–†–≠–ê', 100, ('math_p', 'phis'), 'norm VUZ2'),
            collage('–Æ–≤–∏–ª–∏—Ä–Ω—ã–π', 100, ('math_p', 'hist'), 'norm VUZ3'),
            collage('–ú–ì–£', 100, ('math_p', 'phis', 'inf', 'bio'), 'norm –ú–ì–£'),
            collage('–ú–ì–¢–£ –∏–º.–ë–∞—É–º–∞–Ω–∞', 100, ('math_p', 'phis', 'bio'), 'norm 1111')]

bot = telebot.TeleBot('7019813202:AAG-TNA5l12ZC-244jw223iqQ2jT05shJPI');

names_subjects = {
    'math_p': ('–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å'),
    'math_b': ('–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–∞–∑–æ–≤–∞—è', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–∞–∑–∞'),
    'phis': ('—Ñ–∏–∑–∏–∫–∞'),
    'inf': ('–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'),
    'hist': ('–∏—Å—Ç–æ—Ä–∏—è')
}
subjects_math = {
    'math_p':'üìà–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—å',
    'math_b':'üìâ–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–∞–∑–∞'
}
subjects_other = {
    'phis': 'üíÄ–§–∏–∑–∏–∫–∞',
    'inf': 'üåê–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
    'hist': 'üè∞–ò—Å—Ç–æ—Ä–∏—è',
    'soc': 'üë§–û–±—â–µ—Å—Ç–≤–æ',
    'bio': 'üß¨–ë–∏–æ–ª–æ–≥–∏—è',
    'chem': 'üß™–•–∏–º–∏—è',
    'geo': 'üó∫Ô∏è–ì–µ–æ–≥—Ä–∞—Ñ–∏—èÔ∏è',
    'eng': 'üá¨üáß–ê–Ω–≥–ª–∏–π—Å–∫–∏–πüá¨üáß',
    'liter': 'üìö–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'
}

user_data = []
user_data_balls = 0
count = 0
count_with_balls = 0
queue_out = -1
id_user = ''
listV = []
flagColl = False
balls_input = False


@bot.message_handler(commands=['reset'])
def f2(message):
    global user_data
    global queue_out
    global id_user
    global balls_input
    id_user = message.from_user.id

    user_data = []
    queue_out = 0
    balls_input = []

    keyboard_math = types.InlineKeyboardMarkup()
    keyboard_other = types.InlineKeyboardMarkup()
    keyboard_answer = types.InlineKeyboardMarkup()
    keyboard_answerBalls = types.InlineKeyboardMarkup()
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='55+', callback_data='55'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='70+', callback_data='70'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='85+', callback_data='85'))
    key = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')
    keyboard_answer.add(key)
    key = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä—é –µ—â–µ –ø—Ä–µ–¥–º–µ—Ç—ã', callback_data='no')
    keyboard_answer.add(key)

    flag = True
    row = []
    for i in subjects_other:
        if len(row) == 2: flag = False
        if i not in user_data and flag:
            key = types.InlineKeyboardButton(text=subjects_other[i], callback_data=i)
            row.append(key)
        if flag == False:
            keyboard_other.add(row[0], row[1])
            row = []
            flag = True

    for i in subjects_math:
        key = types.InlineKeyboardButton(text=subjects_math[i], callback_data=i)
        keyboard_math.add(key)

    if queue_out == 0: bot.send_message(id_user, text=f'ur id: {message.from_user.id}\nuser data: {user_data}',
                              reply_markup=keyboard_math)
    elif queue_out == 1: bot.send_message(id_user, text=f'ur id: {message.from_user.id}\nuser data: {user_data}',
                              reply_markup=keyboard_other)
    elif queue_out == 2:
        bot.send_message(id_user, text=f'–≠—Ç–æ –≤—Å–µ? –£ –Ω–∞—Å —Ç—É—Ç {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –í–∑–≥–ª—è–Ω–µ—à—å?',
                              reply_markup=keyboard_answer)
    elif queue_out == 3: bot.send_message(id_user, text='–ù–∞ —Å–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –º–µ—Ç–∏—à—å? –ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∞–º:',
                         reply_markup=keyboard_answerBalls)

@bot.message_handler(commands=['start'])
def f1(message):
    global user_data
    global queue_out
    global id_user
    global balls_input
    id_user = message.from_user.id
    universalButton3 = types.InlineKeyboardButton(text='–ò–ù–§–û', callback_data='info')
    keyboard_math = types.InlineKeyboardMarkup()
    keyboard_other = types.InlineKeyboardMarkup()
    keyboard_answer = types.InlineKeyboardMarkup()
    keyboard_answerBalls = types.InlineKeyboardMarkup()
    keyboard_mainMenu = types.InlineKeyboardMarkup()
    keyboard_mainMenu.add(types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å', callback_data='starting'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='55+', callback_data='55'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='70+', callback_data='70'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='85+', callback_data='85'))
    key = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')
    keyboard_answer.add(key)
    key = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä—é –µ—â–µ –ø—Ä–µ–¥–º–µ—Ç—ã', callback_data='no')
    keyboard_answer.add(key)

    flag = True
    row = []
    for i in subjects_other:
        if len(row) == 2: flag = False
        if i not in user_data and flag:
            key = types.InlineKeyboardButton(text=subjects_other[i], callback_data=i)
            row.append(key)
        if flag == False:
            keyboard_other.add(row[0], row[1])
            row = []
            flag = True

    for i in subjects_math:
        key = types.InlineKeyboardButton(text=subjects_math[i], callback_data=i)
        keyboard_math.add(key)
    if queue_out == -1: bot.send_photo(id_user, caption='–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç "After –ï–ì–≠" –∏ –æ–Ω –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–º –≤—É–∑–∞!', photo='https://i.imgur.com/k9NwTr7.png',
                                       reply_markup=keyboard_mainMenu)
    elif queue_out == 0: bot.send_photo(id_user, photo='https://i.imgur.com/9TQFoHQ.png', reply_markup=keyboard_math)
    elif queue_out == 1: bot.send_photo(id_user, photo='https://i.imgur.com/7VoNa5R.png', reply_markup=keyboard_other)
    elif queue_out == 2:
        count += random.randint(10, 20)
        bot.send_message(id_user, text=f'–≠—Ç–æ –≤—Å–µ? –£ –Ω–∞—Å —Ç—É—Ç {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –í–∑–≥–ª—è–Ω–µ—à—å?',
                              reply_markup=keyboard_answer)
    elif queue_out == 3: bot.send_message(id_user, text='–ù–∞ —Å–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –º–µ—Ç–∏—à—å? –ú–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∞–º:',
                         reply_markup=keyboard_answerBalls)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global queue_out
    global user_data
    global balls_input
    global id_user
    global listV
    global user_data_balls
    global flagColl
    universalButton1 = types.InlineKeyboardButton(text='–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ', callback_data='mainMenu')
    universalButton2 = types.InlineKeyboardButton(text='–ò–ó–ë–†–ê–ù–ù–û–ï', callback_data='izbrannoe')
    universalButton3 = types.InlineKeyboardButton(text='–ò–ù–§–û', callback_data='info')
    if call.data in subjects_math:
        queue_out = 1
        user_data.append(call.data)
    elif call.data == 'izbrannoe':
        queue_out = -2
    elif call.data == 'info':
        queue_out = -3
    elif call.data == 'starting':
        queue_out = 0
    elif call.data == 'mainMenu':
        queue_out = -1
        user_data = []
        listV = []
        user_data_balls = 0
        balls_input = False
    elif call.data in subjects_other:
        queue_out = 2
        user_data.append(call.data)
    elif call.data == 'no': queue_out = 1
    elif user_data_balls and call.data == 'yes':
        queue_out = 4
    elif call.data == 'yes':
        queue_out = 3
        balls_input = True
    elif call.data == '55':
        user_data_balls = 55*3
        queue_out = 2
    elif call.data == '70':
        user_data_balls = 70*3
        queue_out = 2
    elif call.data == '85':
        user_data_balls = 85*3
        queue_out = 2
    elif call.data in ('yesV', 'noV') and listV:
        queue_out = 4
    if call.data == 'yesV':
        databaseConnect.writeDB(f"""INSERT INTO users (user_id, nameV, discriptionV, linkV, besplatno,
                                platno, cost, otsrochka, balls_user, subjects, speciality)
                                VALUES({id_user}, '{listV[0].name}', '{listV[0].description}', 
                                '{listV[0].link}', {listV[0].besplatno}, {listV[0].platno}, {listV[0].cost}, 
                                {listV[0].otsrochka}, {listV[0].balls}, '{listV[0].subjects[0]}', 'asd')""")
        listV.pop(0)
    if call.data == 'noV':
        listV.pop(0)

    keyboard_math = types.InlineKeyboardMarkup()
    keyboard_other = types.InlineKeyboardMarkup()
    keyboard_answer = types.InlineKeyboardMarkup()
    keyboard_answerBalls = types.InlineKeyboardMarkup()
    keyboard_answerVUZ = types.InlineKeyboardMarkup()
    keyboard_mainMenu = types.InlineKeyboardMarkup()
    keyboard_mainMenu.add(types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å', callback_data='starting'))
    keyboard_mainMenu.add(universalButton2)
    keyboard_mainMenu.add(universalButton3)
    keyboard_answerVUZ.add(types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data='yesV'),
                           types.InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data='noV'))
    keyboard_answerVUZ.add(universalButton1)
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='55+', callback_data='55'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='70+', callback_data='70'))
    keyboard_answerBalls.add(types.InlineKeyboardButton(text='85+', callback_data='85'))
    keyboard_answer.add(types.InlineKeyboardButton(text='–î–∞', callback_data='yes'))
    keyboard_answer.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä—é –µ—â–µ –ø—Ä–µ–¥–º–µ—Ç—ã', callback_data='no'))
    keyboard_answer.add(universalButton1)

    flag = True
    row = []
    c = 0
    for index, i in enumerate(subjects_other):
        if len(row) == 2:
            keyboard_other.add(row[0], row[1])
            row = []
        elif len(row) == 1 and index+1 == len(subjects_other):
            keyboard_other.add(row[0])
        if i not in user_data:
            row.append(types.InlineKeyboardButton(text=subjects_other[i], callback_data=i))
    keyboard_other.add(universalButton1)

    for i in subjects_math:
        key = types.InlineKeyboardButton(text=subjects_math[i], callback_data=i)
        keyboard_math.add(key)
    keyboard_math.add(universalButton1)

    count = 0
    for i in collages:
        if i.can_be(user_data.copy(), 310):
            count += 1
    if flagColl and queue_out == 2:
        for i in collages:
            if i.can_be(user_data, user_data_balls):
                listV.append(i)
        flagColl = False

    count_with_balls = 310
    if user_data_balls:
        count_with_balls = 0
        for i in collages:
            if i.can_be(user_data.copy(), user_data_balls):
                count_with_balls += 1

    if count_with_balls < count and count_with_balls:
        text2 = f'–° —Ç–∞–∫–∏–º–∏ –±–∞–ª–ª–∞–º–∏ –≤—ã–±–æ—Ä —Å—É–∂–∞–µ—Ç—Å—è –¥–æ {count_with_balls} –≤—É–∑–æ–≤'
    elif count_with_balls >= count:
        count += random.randint(10, 20)
        text2 = f'–≠—Ç–æ –≤—Å–µ? –£ –Ω–∞—Å —Ç—É—Ç {count} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –í–∑–≥–ª—è–Ω–µ—à—å?'
    elif count_with_balls == 0 and count > 0:
        text2 = '–î–ª—è —Ç–∞–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å —Ç–∞–∫–∏–º–∏ –±–∞–ª–ª–∞–º–∏ –Ω–∏—á–≥–µ–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å :('

    if queue_out == -1: bot.send_photo(id_user, caption='',
                                       photo='https://i.imgur.com/k9NwTr7.png',
                                       reply_markup=keyboard_mainMenu)
    elif queue_out == -2:
        m = types.InlineKeyboardMarkup()
        m.add(types.InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—É–∑–µ', url='https://vuzopedia.ru/vuz/405'))
        m.add(types.InlineKeyboardButton(text='–î–∞–ª–µ–µ', callback_data=666))
        m.add(universalButton1)
        text1 = '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ú–ò–°–ò–°Ó°æ'
        text2 = ('–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ú–ò–°–ò–° ‚Äî –≤–µ–¥—É—â–∏–π –≤—É–∑ —Å—Ç—Ä–∞–Ω—ã –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è, '
                 '–≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –í 2023 –≥–æ–¥—É –ù–ò–¢–£ –ú–ò–°–ò–° –∑–∞–Ω—è–ª 264-–µ –º–µ—Å—Ç–æ –≤ –º–∏—Ä–æ–≤–æ–º —Ä–µ–π—Ç–∏–Ω–≥–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤ RUR, '
                 '–≤–æ–π–¥—è –≤ –¢–û–ü-5 –ª—É—á—à–∏—Ö –≤—É–∑–æ–≤ —Å—Ç—Ä–∞–Ω—ã. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –Ω–∞–∏–±–æ–ª—å—à–∏–π —Ä–æ—Å—Ç –ø–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º ¬´–ü—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ¬ª –∏ ¬´–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è¬ª.')
        bot.send_message(id_user, text=text1)
        bot.send_message(id_user, text=text2, reply_markup=m)
    elif queue_out == -3:
        m1 = types.InlineKeyboardMarkup()
        m1.add(types.InlineKeyboardButton(text='–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ', callback_data='mainMenu'))
        bot.send_photo(id_user, photo= 'https://i.imgur.com/65ipGkK.png',
                       caption='–ë–æ—Ç —Å—É–ø–µ—Ä –∫–ª–∞—Å—Å–Ω—ã–π, –ø–æ–º–æ–≥–∞–µ—Ç —Å –≤—ã–±–æ—Ä–æ–º –≤—É–∑–∞ —à–∫–æ–ª—å–Ω–∏–∫–∞–º 10 –∏ 11 –∫–ª–∞—Å—Å–æ–≤) ', reply_markup=m1)
    elif queue_out == 0: bot.send_photo(id_user, photo='https://i.imgur.com/9TQFoHQ.png', reply_markup=keyboard_math)
    elif queue_out == 1: bot.send_photo(id_user, photo='https://i.imgur.com/7VoNa5R.png', reply_markup=keyboard_other)
    elif queue_out == 2: bot.send_message(id_user, text=text2, reply_markup=keyboard_answer)
    elif queue_out == 3:
        flagColl = True
        bot.send_photo(id_user, photo='https://i.imgur.com/kkyh2Zi.png',
                         reply_markup=keyboard_answerBalls)
    elif queue_out == 4:
        keyboard_end = types.InlineKeyboardMarkup()
        keyboard_end.add(universalButton1)
        if listV:
            bot.send_message(id_user, text=f'Name: {listV[0].name}'
                                           f'Subjects: {listV[0].subjects}'
                                           f'Balls_needed: {listV[0].balls}'
                                           f'Description: {listV[0].description}',
                             reply_markup=keyboard_answerVUZ)
        else:
            bot.send_message(id_user, text='–í—É–∑—ã –∫–æ–Ω—á–∏–ª–∏—Å—å, –º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è '
                                             '–∫ –∫–∞–∂–¥–æ–º—É –≤—É–∑—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ :)', reply_markup=keyboard_end)

bot.polling(none_stop=True, interval=0) # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤